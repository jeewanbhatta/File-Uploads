/*
 * fake_keys_long.js
 * Purpose: a long JavaScript file containing many credential-like keywords
 * for testing keyword/token detectors. ALL entries are placeholders and
 * do NOT contain any real credentials. Use only for benign testing.
 */

// Large object with quoted property names (ensures the exact keyword appears)
const fakeKeys = {
  "AWS_ACCESS_KEY_ID": "REDACTED_PLACEHOLDER_0001",
  "AWS_SECRET_ACCESS_KEY": "REDACTED_PLACEHOLDER_0002",
  "AMAZON_AWS_ACCESS_KEY_ID": "REDACTED_PLACEHOLDER_0003",
  "AMAZON_AWS_SECRET_ACCESS_KEY": "REDACTED_PLACEHOLDER_0004",
  "ALGOLIA_API_KEY": "REDACTED_PLACEHOLDER_0005",
  "AZURE_CLIENT_ID": "REDACTED_PLACEHOLDER_0006",
  "AZURE_CLIENT_SECRET": "REDACTED_PLACEHOLDER_0007",
  "AZURE_USERNAME": "REDACTED_PLACEHOLDER_0008",
  "AZURE_PASSWORD": "REDACTED_PLACEHOLDER_0009",
  "MSI_ENDPOINT": "REDACTED_PLACEHOLDER_0010",
  "MSI_SECRET": "REDACTED_PLACEHOLDER_0011",
  "binance_api": "REDACTED_PLACEHOLDER_0012",
  "binance_secret": "REDACTED_PLACEHOLDER_0013",
  "BITTREX_API_KEY": "REDACTED_PLACEHOLDER_0014",
  "BITTREX_API_SECRET": "REDACTED_PLACEHOLDER_0015",
  "CF_PASSWORD": "REDACTED_PLACEHOLDER_0016",
  "CF_USERNAME": "REDACTED_PLACEHOLDER_0017",
  "CODECLIMATE_REPO_TOKEN": "REDACTED_PLACEHOLDER_0018",
  "COVERALLS_REPO_TOKEN": "REDACTED_PLACEHOLDER_0019",
  "CIRCLE_TOKEN": "REDACTED_PLACEHOLDER_0020",
  "DIGITALOCEAN_ACCESS_TOKEN": "REDACTED_PLACEHOLDER_0021",
  "DOCKER_EMAIL": "REDACTED_PLACEHOLDER_0022",
  "DOCKER_PASSWORD": "REDACTED_PLACEHOLDER_0023",
  "DOCKER_USERNAME": "REDACTED_PLACEHOLDER_0024",
  "DOCKERHUB_PASSWORD": "REDACTED_PLACEHOLDER_0025",
  "FACEBOOK_APP_ID": "REDACTED_PLACEHOLDER_0026",
  "FACEBOOK_APP_SECRET": "REDACTED_PLACEHOLDER_0027",
  "FACEBOOK_ACCESS_TOKEN": "REDACTED_PLACEHOLDER_0028",
  "FIREBASE_TOKEN": "REDACTED_PLACEHOLDER_0029",
  "FIREBASE_API_TOKEN": "REDACTED_PLACEHOLDER_0030",
  "FOSSA_API_KEY": "REDACTED_PLACEHOLDER_0031",
  "GH_TOKEN": "REDACTED_PLACEHOLDER_0032",
  "GH_ENTERPRISE_TOKEN": "REDACTED_PLACEHOLDER_0033",
  "CI_DEPLOY_PASSWORD": "REDACTED_PLACEHOLDER_0034",
  "CI_DEPLOY_USER": "REDACTED_PLACEHOLDER_0035",
  "GOOGLE_APPLICATION_CREDENTIALS": "REDACTED_PLACEHOLDER_0036",
  "GOOGLE_API_KEY": "REDACTED_PLACEHOLDER_0037",
  "GITLAB_USER_LOGIN": "REDACTED_PLACEHOLDER_0038",
  "CI_JOB_JWT": "REDACTED_PLACEHOLDER_0039",
  "CI_JOB_JWT_V2": "REDACTED_PLACEHOLDER_0040",
  "CI_JOB_TOKEN": "REDACTED_PLACEHOLDER_0041",
  "HEROKU_API_KEY": "REDACTED_PLACEHOLDER_0042",
  "HEROKU_API_USER": "REDACTED_PLACEHOLDER_0043",
  "MAILGUN_API_KEY": "REDACTED_PLACEHOLDER_0044",
  "MCLI_PRIVATE_API_KEY": "REDACTED_PLACEHOLDER_0045",
  "MCLI_PUBLIC_API_KEY": "REDACTED_PLACEHOLDER_0046",
  "NGROK_TOKEN": "REDACTED_PLACEHOLDER_0047",
  "NGROK_AUTH_TOKEN": "REDACTED_PLACEHOLDER_0048",
  "NPM_AUTH_TOKEN": "REDACTED_PLACEHOLDER_0049",
  "OKTA_CLIENT_ORGURL": "REDACTED_PLACEHOLDER_0050",
  "OKTA_CLIENT_TOKEN": "REDACTED_PLACEHOLDER_0051",
  "OKTA_OAUTH2_CLIENTSECRET": "REDACTED_PLACEHOLDER_0052",
  "OKTA_OAUTH2_CLIENTID": "REDACTED_PLACEHOLDER_0053",
  "OKTA_AUTHN_GROUPID": "REDACTED_PLACEHOLDER_0054",
  "OS_USERNAME": "REDACTED_PLACEHOLDER_0055",
  "OS_PASSWORD": "REDACTED_PLACEHOLDER_0056",
  "PERCY_TOKEN": "REDACTED_PLACEHOLDER_0057",
  "POSTGRES_PASSWORD": "REDACTED_PLACEHOLDER_0058",
  "SAUCE_ACCESS_KEY": "REDACTED_PLACEHOLDER_0059",
  "SAUCE_USERNAME": "REDACTED_PLACEHOLDER_0060",
  "SENTRY_AUTH_TOKEN": "REDACTED_PLACEHOLDER_0061",
  "SLACK_TOKEN": "REDACTED_PLACEHOLDER_0062",
  "square_access_token": "REDACTED_PLACEHOLDER_0063",
  "square_oauth_secret": "REDACTED_PLACEHOLDER_0064",
  "STRIPE_API_KEY": "REDACTED_PLACEHOLDER_0065",
  "STRIPE_DEVICE_NAME": "REDACTED_PLACEHOLDER_0066",
  "SURGE_TOKEN": "REDACTED_PLACEHOLDER_0067",
  "SURGE_LOGIN": "REDACTED_PLACEHOLDER_0068",
  "TWILIO_ACCOUNT_SID": "REDACTED_PLACEHOLDER_0069",
  "CONSUMER_KEY": "REDACTED_PLACEHOLDER_0070",
  "CONSUMER_SECRET": "REDACTED_PLACEHOLDER_0071",
  "TRAVIS_SUDO": "REDACTED_PLACEHOLDER_0072",
  "TRAVIS_OS_NAME": "REDACTED_PLACEHOLDER_0073",
  "TRAVIS_SECURE_ENV_VARS": "REDACTED_PLACEHOLDER_0074",
  "TELEGRAM_BOT_TOKEN": "REDACTED_PLACEHOLDER_0075",
  "VAULT_TOKEN": "REDACTED_PLACEHOLDER_0076",
  "VAULT_CLIENT_KEY": "REDACTED_PLACEHOLDER_0077",
  "TOKEN": "REDACTED_PLACEHOLDER_0078",
  "VULTR_ACCESS": "REDACTED_PLACEHOLDER_0079",
  "VULTR_SECRET": "REDACTED_PLACEHOLDER_0080",
  "ConsumerKey": "REDACTED_PLACEHOLDER_0081",
  "ConsumerSecret": "REDACTED_PLACEHOLDER_0082",
  "DB_USERNAME": "REDACTED_PLACEHOLDER_0083",
  "HOMEBREW_GITHUB_API_TOKEN": "REDACTED_PLACEHOLDER_0084",
  "JEKYLL_GITHUB_TOKEN": "REDACTED_PLACEHOLDER_0085",
  "PT_TOKEN": "REDACTED_PLACEHOLDER_0086",
  "SESSION_TOKEN": "REDACTED_PLACEHOLDER_0087",
  "SF_USERNAME": "REDACTED_PLACEHOLDER_0088",
  "SLACK_BOT_TOKEN": "REDACTED_PLACEHOLDER_0089",
  "access-token": "REDACTED_PLACEHOLDER_0090",
  "access_token": "REDACTED_PLACEHOLDER_0091",
  "access_token_secret": "REDACTED_PLACEHOLDER_0092",
  "accesstoken": "REDACTED_PLACEHOLDER_0093",
  "admin": "REDACTED_PLACEHOLDER_0094",
  "api-key": "REDACTED_PLACEHOLDER_0095",
  "api_key": "REDACTED_PLACEHOLDER_0096",
  "api_secret_key": "REDACTED_PLACEHOLDER_0097",
  "api_token": "REDACTED_PLACEHOLDER_0098",
  "auth_token": "REDACTED_PLACEHOLDER_0099",
  "authkey": "REDACTED_PLACEHOLDER_0100",
  "authorization": "REDACTED_PLACEHOLDER_0101",
  "authorization_key": "REDACTED_PLACEHOLDER_0102",
  "authorization_token": "REDACTED_PLACEHOLDER_0103",
  "authtoken": "REDACTED_PLACEHOLDER_0104",
  "aws_access_key_id": "REDACTED_PLACEHOLDER_0105",
  "aws_secret_access_key": "REDACTED_PLACEHOLDER_0106",
  "bearer": "REDACTED_PLACEHOLDER_0107",
  "bot_access_token": "REDACTED_PLACEHOLDER_0108",
  "bucket": "REDACTED_PLACEHOLDER_0109",
  "client-secret": "REDACTED_PLACEHOLDER_0110",
  "client_id": "REDACTED_PLACEHOLDER_0111",
  "client_key": "REDACTED_PLACEHOLDER_0112",
  "client_secret": "REDACTED_PLACEHOLDER_0113",
  "clientsecret": "REDACTED_PLACEHOLDER_0114",
  "consumer_key": "REDACTED_PLACEHOLDER_0115",
  "consumer_secret": "REDACTED_PLACEHOLDER_0116",
  "dbpasswd": "REDACTED_PLACEHOLDER_0117",
  "email": "REDACTED_PLACEHOLDER_0118",
  "encryption-key": "REDACTED_PLACEHOLDER_0119",
  "encryption_key": "REDACTED_PLACEHOLDER_0120",
  "encryptionkey": "REDACTED_PLACEHOLDER_0121",
  "id_dsa": "REDACTED_PLACEHOLDER_0122",
  "irc_pass": "REDACTED_PLACEHOLDER_0123",
  "key": "REDACTED_PLACEHOLDER_0124",
  "oauth_token": "REDACTED_PLACEHOLDER_0125",
  "pass": "REDACTED_PLACEHOLDER_0126",
  "password": "REDACTED_PLACEHOLDER_0127",
  "private_key": "REDACTED_PLACEHOLDER_0128",
  "private-key": "REDACTED_PLACEHOLDER_0129",
  "privatekey": "REDACTED_PLACEHOLDER_0130",
  "secret": "REDACTED_PLACEHOLDER_0131",
  "secret-key": "REDACTED_PLACEHOLDER_0132",
  "secret_key": "REDACTED_PLACEHOLDER_0133",
  "secret_token": "REDACTED_PLACEHOLDER_0134",
  "secretkey": "REDACTED_PLACEHOLDER_0135",
  "session_key": "REDACTED_PLACEHOLDER_0136",
  "session_secret": "REDACTED_PLACEHOLDER_0137",
  "slack_api_token": "REDACTED_PLACEHOLDER_0138",
  "slack_secret_token": "REDACTED_PLACEHOLDER_0139",
  "ssh-key": "REDACTED_PLACEHOLDER_0140",
  "ssh_key": "REDACTED_PLACEHOLDER_0141",
  "sshkey": "REDACTED_PLACEHOLDER_0142",
  "token": "REDACTED_PLACEHOLDER_0143",
  "username": "REDACTED_PLACEHOLDER_0144",
  "xoxa-2": "REDACTED_PLACEHOLDER_0145",
  "xoxr": "REDACTED_PLACEHOLDER_0146"
};

// Also create variables and repeated string occurrences to enlarge file
// and generate case-variants for case-insensitive testing.

let AWS_ACCESS_KEY_ID = "PLACEHOLDER_AWS_ACCESS_KEY_ID";
let aws_access_key_id = "placeholder_aws_access_key_id_lower";
let Aws_Access_Key_Id = "placeholder_mixed_case";

// Repeat many times in comments and strings to make the file long
const repeatedBlocks = [];
for (let i = 0; i < 120; i++) {
  repeatedBlocks.push(`// block ${i}: AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY api_key token secret password\n` +
    `/* sample strings: \"AWS_ACCESS_KEY_ID\", \"aws_secret_access_key\", \"api_key\" */\n` +
    `const _sample_${i} = "AWS_ACCESS_KEY_ID=PLACEHOLDER; AWS_SECRET_ACCESS_KEY=PLACEHOLDER; api_key=PLACEHOLDER";\n`);
}

// Dump the repeated text to a big string so the words appear many times in the file
const longBlob = repeatedBlocks.join('\n');

// Also mix the keywords into arrays, templates and object keys again for coverage
const keywordList = Object.keys(fakeKeys).concat([
  'accessToken', 'access_token', 'ACCESS_TOKEN', 'secret', 'SECRET', 'SecretKey', 'privateKey'
]);

const hugeTestArray = [];
for (let i = 0; i < 200; i++) {
  const k = keywordList[i % keywordList.length];
  hugeTestArray.push({ index: i, key: k, value: `PLACEHOLDER_${i}` });
}

// A function that prints some of the keys (safe placeholders only)
function printSampleKeys(n = 10) {
  console.log('--- sample placeholder keys ---');
  for (let i = 0; i < Math.min(n, hugeTestArray.length); i++) {
    console.log(i, hugeTestArray[i].key, '->', hugeTestArray[i].value);
  }
  console.log('--- end ---');
}

// Attach a long string that contains many of the keywords for grep testing
const hugeTextForGrep = `\n` +
  "AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AMAZON_AWS_ACCESS_KEY_ID AMAZON_AWS_SECRET_ACCESS_KEY ALGOLIA_API_KEY " +
  "AZURE_CLIENT_ID AZURE_CLIENT_SECRET AZURE_USERNAME AZURE_PASSWORD MSI_ENDPOINT MSI_SECRET binance_api binance_secret " +
  "BITTREX_API_KEY BITTREX_API_SECRET CF_PASSWORD CF_USERNAME CODECLIMATE_REPO_TOKEN COVERALLS_REPO_TOKEN CIRCLE_TOKEN " +
  "DIGITALOCEAN_ACCESS_TOKEN DOCKER_EMAIL DOCKER_PASSWORD DOCKER_USERNAME DOCKERHUB_PASSWORD FACEBOOK_APP_ID FACEBOOK_APP_SECRET " +
  "FACEBOOK_ACCESS_TOKEN FIREBASE_TOKEN FIREBASE_API_TOKEN FOSSA_API_KEY GH_TOKEN GH_ENTERPRISE_TOKEN CI_DEPLOY_PASSWORD CI_DEPLOY_USER " +
  "GOOGLE_APPLICATION_CREDENTIALS GOOGLE_API_KEY GITLAB_USER_LOGIN CI_JOB_JWT CI_JOB_JWT_V2 CI_JOB_TOKEN HEROKU_API_KEY HEROKU_API_USER " +
  "MAILGUN_API_KEY MCLI_PRIVATE_API_KEY MCLI_PUBLIC_API_KEY NGROK_TOKEN NGROK_AUTH_TOKEN NPM_AUTH_TOKEN OKTA_CLIENT_ORGURL OKTA_CLIENT_TOKEN " +
  "OKTA_OAUTH2_CLIENTSECRET OKTA_OAUTH2_CLIENTID OKTA_AUTHN_GROUPID OS_USERNAME OS_PASSWORD PERCY_TOKEN POSTGRES_PASSWORD SAUCE_ACCESS_KEY SAUCE_USERNAME " +
  "SENTRY_AUTH_TOKEN SLACK_TOKEN square_access_token square_oauth_secret STRIPE_API_KEY STRIPE_DEVICE_NAME SURGE_TOKEN SURGE_LOGIN TWILIO_ACCOUNT_SID\n";

// Repeat the hugeTextForGrep many times inside a template literal to create file length
let giant = '';
for (let i = 0; i < 60; i++) {
  giant += `/* giant block ${i} */\n` + hugeTextForGrep + '\n';
}

// Export a module with many of the placeholders so bundlers will include names
module.exports = {
  fakeKeys,
  AWS_ACCESS_KEY_ID,
  aws_access_key_id,
  Aws_Access_Key_Id,
  hugeTestArray,
  longBlob,
  giant,
  printSampleKeys
};

// End of fake_keys_long.js
